import qbs
import qbs.File
import qbs.FileInfo
import qbs.Environment
import qbs.TextFile

Project {
    id: root

    minimumQbsVersion: '1.11.0'
    qbs.enableDebugCode: true
    qbsSearchPaths: [ 'tools/qbs' ]

    property string version: probeVersion.version
    readonly property int versionMajor: parseInt(version.split('.')[0])
    readonly property int versionMinor: parseInt(version.split('.')[1])
    readonly property int versionPatch: parseInt(version.split('.')[2])
    readonly property string projectName: '@PROJECT_NAME@'
    readonly property string variantSuffix: qbs.buildVariant == 'debug' ? 'd' : ''
    readonly property path qtdir: FileInfo.fromWindowsSeparators(Environment.getEnv('QTDIR'))
    readonly property path projectInstallRoot: '@PROJECT_INSTALL_ROOT@'

    references: [
        'setup/setup.qbs'
    ]

    Product {
        name: 'global'
        type: [ 'global.out' ]
        Depends { name: 'cpp'; cpp.link: false }
        Group {
            name: 'config'
            files: [ 'VERSION' ]
            fileTags: [ 'global.in' ]
            qbs.install: true
            qbs.installPrefix: project.projectName
        }

        Rule {
            inputs: [ 'global.in' ]
            multiplex: true
            Artifact { fileTags: [ 'global.out' ] }
            prepare: {
                var cmd = new JavaScriptCommand;
                cmd.description = 'reading \'VERSION\' file';
                cmd.sourceCode = function() {
                    var filePath = FileInfo.joinPaths(project.sourceDirectory, 'VERSION');
                    var file = new TextFile(filePath, TextFile.ReadOnly);
                    project.version = file.readAll().trim();
                    file.close();
                }
                return [ cmd ];
            }
        }
    }
}
